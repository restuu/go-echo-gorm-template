// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"go-echo-gorm-tempate/pkg/author/repository"
	"go-echo-gorm-tempate/pkg/author/router"
	"go-echo-gorm-tempate/pkg/author/service"
	"go-echo-gorm-tempate/pkg/config"
)

// Injectors from wire_services.go:

func initializeServices(ctx context.Context, conf *config.Config) (*services, error) {
	db, err := newDB(ctx, conf)
	if err != nil {
		return nil, err
	}
	authorRepository := repository.NewUserRepository(db)
	authorGettingService := service.NewUserGettingService(authorRepository)
	authorRouterService := router.AuthorRouterService{
		UserGettingService: authorGettingService,
	}
	mainServices := &services{
		AuthorRouterService: authorRouterService,
	}
	return mainServices, nil
}

// wire_services.go:

type services struct {
	router.AuthorRouterService
}
